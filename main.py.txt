import os
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
import openai
from dotenv import load_dotenv

load_dotenv()
bot = Bot(os.getenv("TELEGRAM_TOKEN"))
dp = Dispatcher()
openai.api_key = os.getenv("OPENAI_API_KEY")

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî Lucid. –ù–∞–ø–∏—à–∏ /day —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ.")

@dp.message(Command("day"))
async def cmd_day(message: types.Message):
    content = """üß† –î–µ–Ω—å 1:
–í–æ–ø—Ä–æ—Å: –ß—Ç–æ –≤ —Ç–µ–±–µ —Å–µ–π—á–∞—Å —Ç—Ä–µ–±—É–µ—Ç —Å–≤–æ–±–æ–¥—ã?
–ü—Ä–∞–∫—Ç–∏–∫–∞: –ó–∞–∫—Ä–æ–π –≥–ª–∞–∑–∞ –Ω–∞ 5 –º–∏–Ω—É—Ç –∏ –ø—Ä–∏—Å–ª—É—à–∞–π—Å—è –∫ –æ—â—É—â–µ–Ω–∏—è–º.
–ö–æ–¥ –¥–Ω—è: ¬´–°–≤–æ–±–æ–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏.¬ª"""
    await message.answer(content)

@dp.message()
async def echo(message: types.Message):
    usr = message.text
    await message.answer("üîç –ê–Ω–∞–ª–∏–∑ –æ—Ç–≤–µ—Ç–∞...")
    resp = openai.ChatCompletion.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": "–¢—ã ‚Äî —ç–º–ø–∞—Ç–∏—á–µ—Å–∫–∏–π –ò–ò-–∫–æ—É—á."},
            {"role": "user", "content": usr}
        ]
    )
    summary = resp.choices[0].message.content
    await message.answer(summary)

if __name__ == "__main__":
    import asyncio
    from aiogram import executor
    executor.start_polling(dp)
